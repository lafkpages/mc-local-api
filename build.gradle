plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

// Add this new configurations block
configurations {
    // This configuration will hold all the libraries we want to bundle into our mod
    modShade

    // Automatically add all `modImplementation` dependencies to our `modShade` configuration
    modImplementation.extendsFrom(modShade)
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url 'https://maven.wispforest.io/releases/' }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    
    flatDir {
        dirs 'libs'
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "mc-local-api" {
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    // Minecraft & Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}" // This is technically optional, but you probably want it anyway.

    // owo-lib
    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"
    annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")

    // Optional dependency for Baritone
    modImplementation "baritone-standalone-fabric:baritone-standalone-fabric:1.14.0-1-g4e05355f"
    modImplementation "nether-pathfinder:nether-pathfinder:1.6"

    // Optional dependency for Xaero's Minimap
    modImplementation "maven.modrinth:xaeros-minimap:${project.xaeros_minimap_version}"

    // Javalin
    modShade "io.javalin:javalin:6.7.0"

    // For Javalin's `ctx.json()` method
    modShade "com.fasterxml.jackson.core:jackson-databind:2.17.2"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

// Modify the 'jar' task to include the 'shade' configuration
jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }

    // This tells the JAR task to find all the libraries in the 'modShade'
    // configuration and embed them.
    from {
        configurations.modShade.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}